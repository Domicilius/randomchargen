#!/usr/bin/python
from numpy.random import choice
from optparse import OptionParser

'''Return a randomly generated tabletop character'''

#   Tool to create a random character using the character creation options
#       from 5e D&D books. Useful for creating NPCs or getting an idea for
#       a new PC. 

class character( object ):
    def __init__( self ):
        self.background = None
        self.trait = None
        self.ideal = None
        self.bond = None
        self.flaw = None
        self.jobclass = None
        self.race = None

def choosebackground(character):
    '''Choose background, trait, ideal, bond and flaw for a character'''

    backgrounds = ['Acolyte', 'Charlatan', 'Criminal', 'Entertainer', 
                    'Folk Hero', 'Guild Artisan', 'Hermit', 'Noble', 
                    'Outlander', 'Sage', 'Sailor', 'Soldier', 'Urchin']
    
    if character.background == None:
        character.background = ''.join(map(str, (choice(backgrounds, 1))))
    elif character.background not in backgrounds:
        return 'bad background value given'

    if character.background=='Acolyte':
        traits = [
            'I idolize a particular hero of my faith, and constantly'
            ' refer to that person\'s deeds and example.', 'I can find'
            ' common ground between the fiercest enemies, empathizing'
            ' with them and always working towards peace.', 'I see omens'
            ' in every event and action. The gods try to speak to us,'
            ' we just need to listen.', 'Nothing can shake my'
            ' optimistic attitude', 'I quote (or misquote) sacred texts'
            ' and proverbs in almost every situation.', 'I am tolerant'
            ' (or intolerant) of other faiths and respect (or condemn)'
            ' the worship of other gods', 'I\'ve enjoyed fine food,'
            ' drink and high society among my temple\'s elite. Rough'
            ' living grates on me.', 'I\'ve spent so long in the temple'
            ' that I have little practical experience dealing with'
            ' people in the outside world.'
            ]
        ideals = [
            'Tradition. The ancient traditions of worship and'
            ' sacrifice must be preserved and upheld. (Lawful)', 'Charity.'
            ' I always try to help those in need, no matter what the'
            ' personal cost. (Good)', 'Change. We must help bring about'
            ' the changes the gods are constantly working in the world.'
            ' (Good)', 'Power. I hope to rise one day to the top of my'
            ' faith\'s religious hierarchy. (Lawful)', 'Faith. I trust that'
            ' my diety will guide my actions. I have faith that if I work'
            ' hard, things will go well. (Lawful)', 'Aspiration. I seek to'
            ' prove myself worthy of my god\'s favor by matching my actions'
            ' against his or her teachings. (Any Alignment)'
            ]
        bonds = [
            'I would die to recover an ancient relic of my faith that'
            ' was lost long ago.', 'I will someday get revenge on the'
            ' corrupt temple hierarchy who branded me a heretic.', 'I owe my'
            ' life to the priest who took me in when my parents died.',
            'Everything I do is for the common people.', 'I will do'
            ' anything to protect the temple where I served.', 'I seek to'
            ' preserve a sacred text that my enemies consider heretical'
            ' and seek to destroy.'
            ]
        flaws = [
            'I judge others harshly, and myself even more severely.',
            'I put too much trust in those who wield power within my'
            ' temple\'s hierarchy.', 'My piety sometimes leads me to'
            ' blindly trust those that profess faith in my god.', 'I am'
            ' inflexible in my thinking.', 'I am suspicious of strangers'
            ' and expect the worst of them.', 'Once I pick a goal, I'
            ' become obsessed with it to the detriment of everything else'
            ' in my life.'
            ]

        
        character.trait = ''.join(map(str, (choice(traits, 1))))
        character.ideal = ''.join(map(str, (choice(ideals, 1))))
        character.bond = ''.join(map(str, (choice(bonds, 1))))
        character.flaw = ''.join(map(str, (choice(flaws, 1))))

    if character.background=='Charlatan':
        traits = [
            'I fall in and out of love easily, and am always pursuing'
            ' someone.', 'I have a joke for every occasion, especially'
            ' occasions where humor is inappropriate.', 'Flattery is my'
            ' preferred trick for getting what I want.', 'I\'m a born'
            ' gambler who can\'t resist taking a risk for a potential'
            ' payoff.', 'I lie about almost everything, even when there\'s'
            ' no good reason to.', 'Sarcasm and insults are my weapons of'
            ' choice.', 'I keep multiple holy symbols on me and invoke'
            ' whatever deity might come in useful at any given moment.',
            'I pocket anything I see that might have some value.'
            ]
        ideals = [
            'Independence. I am a free spirit -- no one tells me what to'
            ' do. (Chaotic)', 'Fairness. I never target people who can\'t'
            ' afford to lose a few coins. (Lawful)', 'Charity. I'
            ' distribute the money I acquire to the people who really need'
            ' it. (Good)', 'Creativity. I never run the same con twice.'
            ' (Chaotic)', 'Friendship. Material goods come and go. Bonds'
            ' of friendship last forever. (Good)', 'Aspiration. I\'m'
            ' determined to make something of myself. (Any Alignment)'
            ]
        bonds = [
            'I fleeced the wrong persona nd must work to ensure that this'
            ' individual never crosses paths with me or those I care'
            ' about.', 'I owe everything to my mentor -- a horrible person'
            ' who is probably rotting in jail somewhere.', 'Somewhere out'
            ' there, I have a child who doesn\'t know me. I\'m making'
            ' the world better for him or her.', 'I come from a noble'
            ' family, and one day I\'ll reclaim my lands and title from'
            ' those who stole them from me.', 'A powerful person killed'
            ' someone I love. Some day soon, I\'ll have my revenge.',
            'I swindled and ruined a person who didn\'t deserve it. I'
            ' seek to atone for my misdeeds but might be able to forgive'
            ' myself.'
            ]
        flaws = [
            'I can\'t resist a pretty face.', 'I\'m always in debt. I spend'
            ' my ill-gotten gains on decadent luxuries fast than I bring'
            ' them in.', 'I\'m convinced that no one could ever fool me the'
            ' way that I fool others.', 'I\m too greedy for my own good.'
            ' I can\'t resist taking a risk if there is money involved.',
            'I can\'t resist swindling people who are more powerful than'
            ' me.', 'I hate to admit it and will hate myself for it, but'
            ' I\'ll run and preserve my own hide if the going gets tough.'
            ]

        character.trait = ''.join(map(str, (choice(traits, 1))))
        character.ideal = ''.join(map(str, (choice(ideals, 1))))
        character.bond = ''.join(map(str, (choice(bonds, 1))))
        character.flaw = ''.join(map(str, (choice(flaws, 1))))
    if character.background=='Criminal':
        traits = [
            'I always have a plan for what to do when things go wrong.',
            'I am always calm, no matter what the situation. I never raise'
            ' my voice or let my emotions control me.', 'The first thing'
            ' I do in a new place is note the locations of everything'
            ' valuable -- or where such things could be hidden.', 'I would'
            ' rather make a new friend than a new enemy.', 'I am incredibly'
            ' slow to trust. Those who seem the fairest often have the most'
            ' to hide.', 'I don\'t pay attention to the risks in a'
            ' situation. Never tell me the odds.', 'The best way to get me'
            ' to do something is to tell me I can\'t do it.', 'I blow up'
            ' at the slightest insult.'
            ]
        ideals = [
            'Honor. I don\'t steal from others in the trade. (Lawful)',
            'Freedom. Chains are meant to be broken, as are those who'
            ' would forge them. (Chaotic)', 'Charity. I steal from the'
            ' wealthy so that I can help people in need. (Good)', 'Greed.'
            ' I will do whatever it takes to become wealthy. (Evil)', 
            'People. I\'m loyal to my friends, not to any ideals, and'
            ' everyone else can take a long trip downriver for all I care.'
            ' (Neutral)', 'Redemption. There\'s a spark of good in'
            ' everyone. (Any Alignment)'
            ]
        bonds = [
            'I\'m trying to pay off an old debt I owe to a generous'
            ' benefactor.', 'My ill-gotten gains go to support my family.',
            'Something important was taken from me, and I aim to steal it'
            ' back.', 'I will become the greatest thief that ever lived.',
            'I\'m guilty of a terrible crime. I hope I can redeem myself'
            ' for it.', 'Someone I loved died for a mistake I made. That'
            ' will never happen again.'
            ]
        flaws = [
            'When I see something valuable, I can\'t think about anything'
            ' but how to steal it.', 'When faced with a choice between'
            ' money or friends, I usually choose money.', 'If there is a'
            ' plan, I\'ll forget it. If I don\'t forget it, I\'ll ignore'
            ' it.', 'I have a tell that reveals when I\'m lying.', 'I'
            ' turn tail and run if things look bad.', 'An innocent person'
            ' is in prison for a crime that I committed. I\'m okay with'
            ' that.'
            ]

        character.trait = ''.join(map(str, (choice(traits, 1))))
        character.ideal = ''.join(map(str, (choice(ideals, 1))))
        character.bond = ''.join(map(str, (choice(bonds, 1))))
        character.flaw = ''.join(map(str, (choice(flaws, 1))))
    if character.background=='Entertainer':
        traits = [
            'I know a story relevant to almost every situation.',
            'Whenever I come to a new place, I collect local rumors and'
            ' spread gossip.', 'I\'m a hopeless romantic, always searching'
            ' for that specific someone.', 'Nobody stays angry at me or'
            ' around me for long, since I can defuse any amount of'
            'tension.', 'I love a good insult, even one directed at me.',
            'I get bitter if I\'m not the center of attention.', 'I\'ll'
            ' settle for nothing less than perfection.', 'I change my mood'
            ' as quickly as I change key in a song.'
            ]
        ideals = [
            'Beauty. When I perform, I make the world better than it was.'
            ' (Good)', 'Tradition. The stories, legends and song of the'
            ' past must never be forgotten, for they teach us who we are.'
            ' (Lawful)', 'Creativity. The world is in need of new ideas'
            ' and bold action. (Chaotic)', 'Greed. I\'m only in it for the'
            ' money and the fame. (Evil)', 'People. I like seeing the'
            ' smiles on people\'s faces when I perform. That\'s all that'
            ' matters. (Neutral)', 'Honesty. Art should reflect the soul'
            ' it should come from within and reveal who we really are.'
            ' (Any Alignment)'
            ]
        bonds = [
            'My instrument is my most treasured possesion, and it reminds'
            ' me of someone I love.', 'Someone stole my precious instrument'
            ' and someday I\'ll get it back.', 'I want to be famous,'
            ' whatever it takes.', 'I idolize a hero of the old tales and'
            ' measure my deeds against theirs\'.', 'I will do anything'
            ' to prove myself superior to my hated rival.', 'I would do'
            ' anything for the other members of my old troupe.'
            ]
        flaws = [
            'I\'ll do anything to win fame and renown.', 'I\'m a sucker'
            ' for a pretty face.', 'A scandal prevents me from ever going'
            ' home again. That kind of trouble seems to follow me around.',
            ' I once satirized a noble who still wants me head. It was a'
            ' mistake that I will likely repeat.', 'I have trouble keeping'
            ' my true feelings heidden. My sharp tongue lands me in'
            ' trouble.', 'Despite my best efforts, I am unreliable to my'
            ' friends.'
            ]

        character.trait = ''.join(map(str, (choice(traits, 1))))
        character.ideal = ''.join(map(str, (choice(ideals, 1))))
        character.bond = ''.join(map(str, (choice(bonds, 1))))
        character.flaw = ''.join(map(str, (choice(flaws, 1))))
    if character.background=='Folk Hero':
        traits = [
           'I judge people by their actions, not their words.', 'If someone'
           ' is in trouble, I am always ready to lend help.', 'When I set'
           ' my mind to do something, I follow through no matter what gets'
           ' in my way.', 'I have a strong sense of fair play and always'
           ' try to find the most equitable solution to arguements.', 'I'
           ' am confident in my own abilities and do what I can to instill'
           ' confidence in others.', 'Think is for other people. I prefer'
           ' action.', 'I misuse long words in an attempt to sound smarter.',
           'I get bored easily. When am I going to get on with my destiny?'
            ]
        ideals = [
            'Respect. People deserve to be treated with dignity and respect.'
            ' (Good)', 'Fairness. No one should get preferential treatment'
            ' before the law, and no one is above the law. (Lawful)', 'Freedom'
            '. Tyrants must not be allowed to oppress the people. (Chaotic)',
            'Might. If I become strong, I can take what I want -- what I'
            ' deserve. (Evil)', 'Sincerity. There is no good in pretending'
            ' to be something I am not. (Neutral)', 'Destiny. Nothing and no'
            ' one can steer me away from my higher calling. (Any Alignment)'
            ]
        bonds = [
            'I have a family, but I have no idea where they are. One day, I'
            ' hope to see them once again.', 'I worked the land, I love the'
            ' land and I will protect the land.', 'A proud noble once gave me'
            ' a horrible beating, and I will take my revenge on any bully I'
            ' encounter.', 'My tools are symbols of my past life, and I carry'
            ' them so that I will never forget their roots.', 'I protect those'
            ' who cannot protect themselves.', 'I wish my childhood sweetheart'
            ' had come with me to pursue my destiny.'
            ]
        flaws = [
            'The tyrant who rules my land will stop at nothing to have me'
            ' killed.', 'I am convinced of the significance of my destiny and'
            ' blind to my shortcomings and the risk of failure.', 'The people'
            ' who knew me when I was young know my shameful secret, so I can'
            ' never go home again.', 'I have a weakness for the vices of the'
            ' city, especially hard drink.', 'Secretly, I believe that things'
            ' would be better if I were a tyrant lording over the land.', 'I'
            ' have trouble trusting in my allies.'
            ]

        character.trait = ''.join(map(str, (choice(traits, 1))))
        character.ideal = ''.join(map(str, (choice(ideals, 1))))
        character.bond = ''.join(map(str, (choice(bonds, 1))))
        character.flaw = ''.join(map(str, (choice(flaws, 1))))
    if character.background=='Guild Artisan':
        traits = [
            'I believe that anything worth doing is worth doing right. I can\'t'
            ' help it, I am a perfectionist.', 'I am a snob who looks down'
            ' on those who cannot appreciate fine art.', 'I always want to'
            ' know how things work and what makes people tick.', 'I am full'
            ' of witty aphorisms and have a proverb for every occasion.', 
            'I am rude to people who lack my commitment to hard work and fair'
            ' play.', 'I like to talk at length about my profession.', 'I do'
            ' not part with my money easily and will haggle tirelessly to get'
            ' the best deal possible.', 'I am well known for my work and want'
            ' to make sure everyone appreciates it. I am always taken aback'
            ' when people have not heard of me.'
            ]
        ideals = [
            'Community. It is the duty of all civilized people to strengthen'
            ' the bonds of community and the security of civilization. (Lawful)'
            'Generosity. My talents were given to me so that I could use them'
            ' to benefit the world. (Good)', 'Freedom. Everyone should be free'
            ' to pursue their own livelihood. (Chaotic)', 'Greed. I am only'
            ' in it for the money. (Evil)', 'People. I am committed to the'
            ' people I care about, not to ideals.', 'Aspiration. I work hard'
            ' to be the best there is at my craft. (Any Alignment)'
            ]
        bonds = [
            'The workshop where I learned my trade is the most important'
            ' place in the world to me.', 'I created a great work for someone'
            ' and then found them unworthy to receive it. I am still looking'
            ' for someone worthy.', 'I owe my guild a great debt for forging'
            ' me into the person I am today.', 'I pursue wealth to secure'
            ' someone\'s love.', 'One day I will return to my guild and prove'
            ' that I am the greatest artisan of them all.', 'I will get'
            ' revenge on the evil forces that destroyed my place of business'
            ' and ruined my livelihood.'
            ]
        flaws = [
            'I will do anything to get my hands on something rare or precious.',
            'I am quick to assume that someone is trying to cheat me.', 'No'
            ' one must ever learn that I stole from the guild coffers.', 'I'
            ' am never satisfied with what I have, I always want more.', 'I'
            ' would kill for a noble title.', 'I am horribly jealous of anyone'
            ' who can outshine my handiwork. Everywhere I go, I am surrounded'
            ' by rivals.'
            ]

        character.trait = ''.join(map(str, (choice(traits, 1))))
        character.ideal = ''.join(map(str, (choice(ideals, 1))))
        character.bond = ''.join(map(str, (choice(bonds, 1))))
        character.flaw = ''.join(map(str, (choice(flaws, 1))))
    if character.background=='Hermit':
        traits = [
            'I have been isolated for so long that I rarely speak, preferring'
            ' gestures and the occasional grunt.', 'I am utterly serene, even'
            ' in the face of disaster.', 'The leader of my community had'
            ' something wise to say on every topic, and I am eager to share'
            ' that wisdom.', 'I feel tremendous empathy for all who suffer.',
            'I am oblivious to etiquette and social expectations.', 'I connect'
            ' everything that happens to me to a grand, cosmic plan.', 'I'
            ' often get lost in my own thoughts and contemplations, becoming'
            ' oblivious to my surroundings.', 'I am working on a grand'
            ' philosophical theory and love sharing my ideas.'
            ]
        ideals = [
            'Greater Good. My gifts are meant to be shared with all, not used'
            ' for my own benefit. (Good).', 'Logic. Emotions must not cloud'
            ' our sense of what is right and true; or our logical thinking.'
            ' (Lawful)', 'Free Thinking. Inquiry and curiosity are the pillars'
            ' of progress. (Chaotic)', 'Power. Solitude and contemplation are'
            ' paths toward mystical or magical power. (Evil)', 'Live and Let'
            ' Live. Meddling in the affairs of others only causes trouble.'
            ' (Neutral)', 'Self-Knowledge. If you know yourself, there is'
            ' nothing left to know. (Any Alignment)'
            ]
        bonds = [
            'Nothing is more important than the other members of my hermitage,'
            ' order, or association.', 'I entered seclusion to hide from the'
            ' ones who might still be hunting me. I must someday confront'
            ' them.', 'I am still seeking the enlightenment I pursued in my'
            ' seclusion, and it still eludes me.', 'I entered seclusion because'
            ' I loved someone I could not have.', 'Should my discovery come'
            ' to light, it could bring ruin to the world.', 'My isolation'
            ' gave me great insight into a great evil that only I can destroy.'
            ]
        flaws = [
            'Now that I\'ve returned to the world, I enjoy its delights a'
            ' little too much.', 'I harbor dark, bloodthirsty thoughts that'
            ' my isolation and meditation failed to quell.', 'I am dogmatic'
            ' in my thoughts and philosophy.', 'I let my need to win'
            ' arguements overshadow friendship and harmony.', 'I would risk'
            ' too much to uncover a lost bit of knowledge.', 'I like keeping'
            ' secrets and will not share them with anyone.'
            ]

        character.trait = ''.join(map(str, (choice(traits, 1))))
        character.ideal = ''.join(map(str, (choice(ideals, 1))))
        character.bond = ''.join(map(str, (choice(bonds, 1))))
        character.flaw = ''.join(map(str, (choice(flaws, 1))))
    if character.background=='Noble':
        traits = [
            'My most eloquent flattery makes everyone I talk to feel like the'
            ' most wonderful and important person in the world.', 'The common'
            ' folk love me for my kindness and generosity.', 'No one could'
            ' doubt by looking at my regal bearing that I am a cut above the'
            ' unwashed masses.', 'I take great pains to always look my best'
            ' and follow the latest fashions.', 'I do not like to get my hands'
            ' dirty, and will not be caught dead in unsuitable accommodations.',
            'Despite my noble birth, I do not place myself above other folk.'
            ' We all share the same blood.', 'My favor, once lost, is lost'
            ' forever.', 'If you do me an injury, I will crush you, ruin your'
            ' name, and salt your fields.'
            ]
        ideals = [
            'Respect. Respect is due to me because of my station, but all'
            ' people regardless of station deserve to be treated with dignity.'
            ' (Good)', 'Responsibility. It is my duty to respect the authority'
            ' those above me, just as those below me must respect mine. (Lawful)',
            ' Independence. I must prove that I can handle myself without the'
            ' coddling of my family. (Chaotic)', 'Power. If I can attain more'
            ' power, no one will tell me what to do. (Evil)', 'Family. Blood'
            ' runs thicker than water. (Any Alignment)', 'Noble Obligation.'
            ' It is my duty to protect and care for the people beneath me.'
            ' (Good)'
            ]
        bonds = [
            'I will face any challenge to win the approval of my family.',
            ' My house\'s alliance with another noble family must be sustained'
            ' at all costs.', 'Nothing is more important than the other members'
            ' of my family.', 'I am in love with the heir of a family that my'
            ' family despises.', 'My loyalty to my sovereign is unwavering.',
            'The common folk must see me as a hero of the people.'
            ]
        flaws = [
            'I secretly believe that everyone is beneath me.', 'I hide a truly'
            ' scandalous secret that could ruin my family forever.', 'I too'
            ' often hear veiled insults and threats in every word addressed'
            ' to me, and I am quick to anger.', 'I have an insatiable desire'
            ' for carnal pleasures.', 'In fact, the world does revolve around'
            ' me.', 'By my words and actions, I often bring shame to my family.'
            ]

        character.trait = ''.join(map(str, (choice(traits, 1))))
        character.ideal = ''.join(map(str, (choice(ideals, 1))))
        character.bond = ''.join(map(str, (choice(bonds, 1))))
        character.flaw = ''.join(map(str, (choice(flaws, 1))))
    if character.background=='Outlander':
        traits = [
            'I am driven by a wanderlust that led me far away from home.',
            ' I watch over my friends as if they were a litter of newborn'
            ' pups.', 'I once ran twenty-five miles without stopping to warn'
            ' my clan of an approaching enemy. I would do it again if I had'
            ' to.', 'I have a lesson for every situation, drawn from observing'
            ' nature.', 'I place no stock in wealthy or well-mannered folk.'
            ' Money and manners won\'t save you from a hungry owlbear.', 'I'
            ' am always picking things up, absently fiddling with them, and'
            ' sometimes accidentally breaking them.', ' I feel far more'
            ' comfortable around animals than people.', 'I was, in fact,'
            ' raised by wolves.'
            ]
        ideals = [
            'Change. Life is like the seasons, in constant change, and we'
            ' must change with it. (Chaotic)', 'Greater Good. It is each'
            ' person\'s responsibility to make the most happiness for the'
            ' whole tribe. (Good)', 'Honor. If I dishonor myself, I dishonor'
            ' my whole clan. (Lawful)', 'Might. The strongest are meant to'
            ' rule. (Evil)', 'Nature. The natural world is more important'
            ' than all the constructs of civilization. (Neutral)', 'Glory.'
            ' I must earn glory in battle, for myself and my clan. (Any'
            ' Alignment)'
            ]
        bonds = [
            'My family, clan or tribe is the most important thing in my life,'
            ' even when they are far from me.', 'An injury to the unpoiled'
            ' wilderness of my home is an injury to me.', 'I will bring'
            ' terrible wrath down on the evildoers who destroyed my homeland.',
            ' I am the last of my tribe, and it is up to me to ensure their'
            ' names enter legend.', 'I suffer awful visions of a coming'
            ' disaster and will do anything to prevent it.', 'It is my duty'
            ' to provide children to sustain my tribe.'
            ]
        flaws = [
            'I am too enamored of ale, wine and other intoxicants.', 'There'
            ' is no room for caution in a life lived to the fullest.', 'I'
            ' remember every insult I have received and nurse a silent'
            ' resentment toward anyone who has ever wronged me.', 'I am slow'
            ' to trust members of other races, tribes and societies.', 
            'Violence is my answer to almost any challenge.' 'Do not expect'
            ' me to save those who cannot save themselves. It is nature\'s'
            ' way that the strong survive and the weak perish.'
            ]

        character.trait = ''.join(map(str, (choice(traits, 1))))
        character.ideal = ''.join(map(str, (choice(ideals, 1))))
        character.bond = ''.join(map(str, (choice(bonds, 1))))
        character.flaw = ''.join(map(str, (choice(flaws, 1))))
    if character.background=='Sage':
        traits = [
            'I use polysyllabic words that convey the impression of great'
            ' erudition.', 'I have read every book in the world\'s greatest'
            ' libraries -- or like to boast that I have.', 'I am used to'
            ' helping out those who are not as smart as I am, and I'
            ' patiently explain everything and anything to others.', 'There'
            ' is nothing I like more than a good mystery.', 'I am willing'
            ' to listen to every side of an arguement before I make my own'
            ' judgment.', 'I...speak...slowly...when talking...to idiots...'
            'which...almost...everyone...is...compared...to me.', 'I am'
            ' horribly awkward in social situations.', 'I am convinced that'
            ' people are always trying to steal my secrets.'
            ]
        ideals = [
            'Knowledge. The path to power and self-improvement is through'
            ' knowledge. (Neutral)', 'Beauty. What is beautiful points us'
            ' beyond itself toward what is true. (Good)', 'Logic. Emotions'
            ' must not cloud our logical thinking. (Lawful)', 'No Limits.'
            ' Nothing should fetter the infinite possibility inherent in all'
            ' existence. (Chaotic)', 'Power. Knowledge is the path to power'
            ' and domination. (Evil)', 'Self-Improvement. The goal of a life'
            ' of study is the betterment of oneself. (Any Alignment)'
            ]
        bonds = [
            'It is my duty to protect my students.', 'I have an ancient text'
            ' that holds terrible secrets that must not fall into the wrong'
            ' hands.', 'I work to preserve a library, university, scriptorium'
            ' or monastery.', 'My life\'s work is a series of tomes related'
            ' to a specific field of lore.', 'I have been searching my whole'
            ' life for the answer to a certain question.', 'I sold my soul'
            ' for knowledge. I hope to do great deeds and win it back.'
            ]
        flaws = [
            'I am easily distracted by the promise of information.', 'Most'
            ' people scream and run when they a see a demon. I stop and take'
            ' notes on its anatomy.', 'Unlocking an ancient mystery is worth'
            ' the price of civilization.', 'I overlook obvious solutions in'
            ' favor of complicated ones.', 'I speak without really thinking'
            ' through my words, invariably insulting others.', 'I cannot'
            ' keep a secret to save my life, or anyone else\'s.'
            ]

        character.trait = ''.join(map(str, (choice(traits, 1))))
        character.ideal = ''.join(map(str, (choice(ideals, 1))))
        character.bond = ''.join(map(str, (choice(bonds, 1))))
        character.flaw = ''.join(map(str, (choice(flaws, 1))))
    if character.background=='Sailor':
        traits = [
            'My friends know they can rely on me, no matter what.', 'I work'
            ' hard so that I can play hard when the work is done.', 'I enjoy'
            ' sailing into new ports and making new friends over a flagon of'
            ' ale.', 'I stretch the truth for the sake of a good story.', 'To'
            ' me, a tavern brawl is a nice way to get to know a good story.',
            'I never pass up a friendly wager.', 'My language is as foul as'
            ' an otyugh\'s nest.', 'I like a job well done, especially if I'
            ' can convince someone else to do it.'
            ]
        ideals = [
            'Respect. The thing that keeps a ship together is mutual respect'
            ' between captain and crew. (Good)', 'Fairness. We all do the work'
            ', so we all share in the rewards. (Lawful)', 'Freedom. The sea'
            ' is freedom -- the freedom to go anywhere and do anything.'
            ' (Chaotic)', 'Mastery. I am a predator, and other ships on the'
            ' sea are my prey. (Evil)', 'People. I am committed to my'
            ' crewmates, not to ideals. (Neutral)', 'Aspiration. Someday'
            ' I will own my own ship and chart my own destiny. (Any Alignment)'
            ]
        bonds = [
            'I am loyal to my captain first, everything else second.',
            'The ship is most important, crewmates and captains come and go.',
            'I will always remember my first ship.', 'In a harbor town, I have'
            ' a paramour whose eyes nearly stole me from the sea.', 'I was'
            ' cheated out of my fair share of the profits, and I want to get'
            ' my due.', 'Ruthless pirates murdered my captain and crewmates'
            ', plundered our ship and left me to die. Vengeance will be mine.'
            ]
        flaws = [
            'I follow orders, even if I think that they are wrong.', 'I will'
            ' say anything to avoid having to do extra work.', 'Once someone'
            ' questions my courage, I never back down no matter how dangerous'
            ' the situation.', 'Once I start drinking, it is hard for me to'
            ' stop.', 'I cannot help but pocket loose coins and trinkets I'
            ' come across.', 'My pride will probably lead to my destruction.'
            ]

        character.trait = ''.join(map(str, (choice(traits, 1))))
        character.ideal = ''.join(map(str, (choice(ideals, 1))))
        character.bond = ''.join(map(str, (choice(bonds, 1))))
        character.flaw = ''.join(map(str, (choice(flaws, 1))))
    if character.background=='Soldier':
        traits = [
            'I am always polite and respectful.', 'I am haunted by memories'
            ' of war. I cannot get the images of violence out of my head.',
            'I have lost too many friends, and I am slow to make new ones.', 
            'I am full of inspiring and cautionary tales from my military'
            ' experience relevant to almost every combat situation.', 'I can'
            ' stare down a hellhound without flinching.', 'I enjoy being'
            ' strong and like breaking things.', 'I have a crude sense of'
            ' humor.', 'I face problems head-on. A simple, direct solution is'
            ' often the best path to success.'
            ]
        ideals = [
            'Greater Good. Our lot is to lay down our lives in defense of'
            ' others. (Good)', 'Responsibility. I do what I must and obey'
            ' just authority. (Lawful)', 'Independence. When people follow'
            ' orders blindly, they embrace a kind of tyranny. (Chaotic)',
            'Might. In life as in war, the stronger force wins. (Evil)',
            'Live and Let Live. Ideals are not worth killing over or going'
            ' to war for. (Neutral)', 'Nation. My city, nation or people are'
            ' all that matter.'
            ]
        bonds = [
            'I would still lay down my life for the people I served with.',
            'Someone saved my life on the battlefield. To this day, I will'
            ' never leave a friend behind.', 'My honor is my life.', 'I will'
            ' never forget the crushing defeat my company suffered or the'
            ' enemies who dealt it.', 'Those who fight beside me are those'
            ' worth dying for.', 'I fight for those who cannot fight for'
            ' themselves.'
            ]
        flaws = [
            'The monstrous enemy we faced in battle still leaves me'
            ' quivering in fear.', 'I have little respect for anyone who is'
            ' not a proven warrior.', 'I made a terrible mistake in battle'
            ' which cost many lives, and I would do anything to keep that'
            ' secret.', 'My hatred of my enemies is blind and unreasoning.',
            'I obey the law, even if the law causes misery.', 'I would rather'
            ' eat my armor than admit when I am wrong.'
            ]

        character.trait = ''.join(map(str, (choice(traits, 1))))
        character.ideal = ''.join(map(str, (choice(ideals, 1))))
        character.bond = ''.join(map(str, (choice(bonds, 1))))
        character.flaw = ''.join(map(str, (choice(flaws, 1))))
    if character.background=='Urchin':
        traits = [
            'I hide scraps of food and trinkets in my pockets.', 'I ask a lot'
            ' of questions.', 'I like to squeeze into small places where no one'
            ' else can get to me.', 'I sleep with my back to a wall of tree,'
            ' with everything I own wrapped in a bundle in my arms.', 'I eat'
            ' like a pig and have bad manners.', 'I think anyone who is nice'
            ' to me is hiding evil intent.', 'I do not like to bathe.', 'I'
            ' bluntly say what other people are hinting at or hiding.'
            ]
        ideals = [
            'Respect. All people, rich or poor, deserve respect. (Good)',
            'Community. We have to take care of each other, because no one'
            ' else is going to do it. (Lawful)', 'Change. The low are lifted'
            ' up and the high and mighty are brought down. Change is the nature'
            ' of things. (Chaotic)', 'Retribution. The rich need to be shown'
            ' what life and death are like in the gutters. (Evil)', 'People.'
            ' I help the people who help me -- that is what keeps us alive.'
            ' (Neutral)', 'Aspiration. I am going to prove that I am worthy'
            ' of a better life.'
            ]
        bonds = [
            'My town or city is my home, and I will fight to defend it.',
            'I sponsor an orphanage to keep others from enduring what I was'
            ' forced to endure.', 'I owe my survival to another urchin who'
            ' taught me to live on the streets.', 'I owe a debt I can never'
            ' repay to the person who took pity on me.', 'I escaped a life'
            ' of poverty by robbing an important person, and I am wanted for'
            ' it.', 'No one else should have to endure the hardships I went'
            ' through.'
            ]
        flaws = [
            'If I am outnumbered, I will run away from a fight.', 'Gold seems'
            ' like a lot of money to me, and I will do just about anything for'
            ' more of it.', 'I will never fully trust anyone other than'
            ' myself.', 'I would rather kill someone in their sleep than fight'
            ' fair.', 'It is not stealing if I need it more than them.', 
            'People who cannot take care of themselves get what they deserve.'
            ]

        character.trait = ''.join(map(str, (choice(traits, 1))))
        character.ideal = ''.join(map(str, (choice(ideals, 1))))
        character.bond = ''.join(map(str, (choice(bonds, 1))))
        character.flaw = ''.join(map(str, (choice(flaws, 1))))

def chooseclass(character):
    '''Choose class for a character'''

    jobclasses = [
        'Barbarian', 'Bard', 'Cleric', 'Druid', 'Fighter', 'Monk', 'Paladin',
        'Ranger', 'Rogue', 'Sorcerer', 'Warlock', 'Wizard'
        ]

    if character.jobclass == None:
        character.jobclass = ''.join(map(str, (choice(jobclasses, 1))))
    elif character.jobclass not in jobclasses:
        return 'bad class value given'

def chooserace(character):
    '''Choose race for a character'''

    races = [
        'Dwarf', 'Elf', 'Halfling', 'Human', 'Dragonborn', 'Gnome',
        'Half-Elf', 'Half-Orc', 'Tiefling'
        ]

    if character.race == None:
        character.race = ''.join(map(str, (choice(races, 1))))
    elif character.race not in races:
        return 'bad class value given'

def main():
    parser = OptionParser()
    parser.add_option("-b", "--background", help="set background manually to"
            " BACKGROUND", metavar="BACKGROUND", dest="userbackground")
    parser.add_option("-c", "--class", help="set class manually to"
            " CLASS", metavar="CLASS", dest="userclass")
    parser.add_option("-r", "--race", help="set race manually to"
            " RACE", metavar="RACE", dest="userrace")
    
    opts, args = parser.parse_args()
    
    newcharacter = character()
    
    if opts.userbackground:        
        if opts.userbackground != "None":
            newcharacter.background = opts.userbackground
            choosebackground(newcharacter)
    else:
        choosebackground(newcharacter)

    if opts.userclass:        
        if opts.userclass != "None":
            newcharacter.jobclass = opts.userclass
            chooseclass(newcharacter)
    else:
        chooseclass(newcharacter)
    
    if opts.userrace:        
        if opts.userrace != "None":
            newcharacter.race = opts.userrace
            chooserace(newcharacter)
    else:
        chooserace(newcharacter)
   
    if opts.userrace != "None":
        print newcharacter.race

    if opts.userclass != "None":
        print newcharacter.jobclass

    if opts.userbackground != "None":
        print newcharacter.background
        print newcharacter.trait
        print newcharacter.ideal
        print newcharacter.bond
        print newcharacter.flaw

main()
